version: 2.1

orbs:
  codecov: codecov/codecov@1.0.2

defaults: &defaults
  working_directory: ~/repo

  docker:
    - image: circleci/node:erbium

jobs:
  validate-branch:
    <<: *defaults

    steps:
      - run:
          name: Validate Branch Name
          command: >
            if [[ "$CIRCLE_BRANCH" =~ ^(feature|bug)\/(patch|minor|major)\/[a-z0-9-]+$ ]];
            then
              echo "Branch name is valid";
            else
              echo "Invalid branch name" && exit 1;
            fi

  install:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-

      - run:
          name: Install
          command: npm ci

      - persist_to_workspace:
          root: ~/repo
          paths: .

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Test
          command: npm run test:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./coverage

      - store_test_results:
          path: ./coverage

      - store_artifacts:
          path: ./coverage

      - codecov/upload:
          file: ./coverage/cobertura-coverage.xml

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Build
          command: npm run build
          environment:
            NODE_ENV: 'test'

      - persist_to_workspace:
          root: ~/repo
          paths: .

  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Authenticate With NPM Registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc

      - run:
          name: Publish
          command: npm publish --access=public

workflows:
  version: 2.1

  test-and-publish:
    jobs:
      - validate-branch:
          filters:
            branches:
              ignore:
                - master

      - install:
          filters:
            branches:
              only: /master|((feature|bug)\/(patch|minor|major)\/[a-z0-9-]+)/

      - test:
          requires:
            - install

      - build:
          requires:
            - install

      - approve:
          type: approval
          requires:
            - test
            - build
          filters:
            branches:
              only: master

      - publish:
          requires:
            - approve
          filters:
            branches:
              only: master
